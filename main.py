import telebot
import sqlite3
from telebot import types

bot = telebot.TeleBot('8038407331:AAHkKlCrd0g5LIRvw24MelNFu07Gi7D-xMc')

first_name = None

@bot.message_handler(commands=['start'])
def start(message):
    username = message.from_user.username
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üõí –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
    btn2 = types.KeyboardButton('üì¶ –£–∑–Ω–∞—Ç—å –æ —Ç–µ–∫—É—â–∏—Ö –∞–∫—Ü–∏—è—Ö –∏ —Å–∫–∏–¥–∫–∞—Ö')
    markup.row(btn1, btn2)
    btn3 = types.KeyboardButton('üìç –ù–∞–π—Ç–∏ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–∞ –∫–∞—Ä—Ç–µ')
    btn4 = types.KeyboardButton('üõ† –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞')
    markup.row(btn3, btn4)

    if username == 'q1w2eer':
        btn_admin = types.KeyboardButton('üìã –ó–∞—è–≤–∫–∏')
        markup.add(btn_admin)
    bot.send_message(message.chat.id, f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ "Qazyna"! üèóÔ∏è

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—ë –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ —Ä–µ–º–æ–Ω—Ç–∞: –æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–æ–¥—É–∫—Ü–∏—é –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º!

–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?

üõí –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
üì¶ –£–∑–Ω–∞—Ç—å –æ —Ç–µ–∫—É—â–∏—Ö –∞–∫—Ü–∏—è—Ö –∏ —Å–∫–∏–¥–∫–∞—Ö
üìç –ù–∞–π—Ç–∏ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–∞ –∫–∞—Ä—Ç–µ
üõ† –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ 

–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é, –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Å –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–æ–º!""", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üìç –ù–∞–π—Ç–∏ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–∞ –∫–∞—Ä—Ç–µ')
def callback_addres(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('2–ì–ò–°', url='https://2gis.kz/taraz/geo/70000001052642114')
    btn2 = types.InlineKeyboardButton('–Ø–Ω–¥–µ–∫—Å –ù–∞–≤–∏–≥–∞—Ç–æ—Ä', url='https://yandex.ru/navi/org/kazyna/241483308849?si=29w5j2pf7p2dnk10881tx2whnr')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, f"""üìç –ù–∞—à –∞–¥—Ä–µ—Å: üèô –≥. –¢–∞—Ä–∞–∑, –ø—Ä–æ—Å–ø–µ–∫—Ç –ñ–∞–º–±—ã–ª–∞, 87

–ó–∞–≥–ª—è–¥—ã–≤–∞–π—Ç–µ –∫ –Ω–∞–º –∑–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π! –ú—ã –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–æ–º!""", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üõí –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
def calback_catalog(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç!', url='http://127.0.0.1:8000/'))
    bot.send_message(message.chat.id, f"""üõí –í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ!""", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üõ† –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞')
def base(message):
    conn = sqlite3.connect('Qazyna_bot_telegram.db')
    cur = conn.cursor()


    cur.execute('''CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, first_name TEXT, phone_number TEXT)''')
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:')
    bot.register_next_step_handler(message, get_name)


def get_name(message):
    global first_name
    first_name = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
    bot.register_next_step_handler(message, get_number)


def get_number(message):
    phone_number = message.text.strip()
    username = message.from_user.username


    conn = sqlite3.connect('Qazyna_bot_telegram.db')
    cur = conn.cursor()

    cur.execute("INSERT INTO users (first_name, phone_number) VALUES (?, ?)", (first_name, phone_number))
    conn.commit()
    cur.close()
    conn.close()

    markup = types.InlineKeyboardMarkup()

    if username == 'q1w2eer':
        markup.add(types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='users'))

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å! –ù–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üìû –û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞! üòä', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'users')
def callback(call):
    conn = sqlite3.connect('Qazyna_bot_telegram.db')
    cur = conn.cursor()

    cur.execute("SELECT * FROM users")
    users = cur.fetchall()

    info = ''
    for el in users:
        info += f'<i><b>–ò–º—è:</b></i> {el[1]}, <i><b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b></i> {el[2]}\n'
    cur.close()
    conn.close()

    bot.send_message(call.message.chat.id, info, parse_mode='html')

@bot.message_handler(func=lambda message: message.text == 'üìã –ó–∞—è–≤–∫–∏')
def handle_requests(message):
    conn = sqlite3.connect('Qazyna_bot_telegram.db')
    cur = conn.cursor()

    cur.execute("SELECT * FROM users")
    users = cur.fetchall()

    info = ''
    for el in users:
        info += f'<i><b>–ò–º—è:</b></i> {el[1]}, <i><b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b></i> {el[2]}\n'
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, info, parse_mode='html')

@bot.message_handler(commands=['site', 'website'])
def site(message):
    bot.send_message(message.chat.id, '<a href="http://127.0.0.1:8000/">Qazyna WebSite</a>', parse_mode='html')


@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name} {message.from_user.last_name}')

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, message)


bot.polling(none_stop=True)